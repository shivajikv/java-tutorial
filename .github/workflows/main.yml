name: Java App CI/CD Workflow
 
on:
  workflow_dispatch:
 
permissions:
  contents: write
 
jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
 
    steps:
    # Step 1: Check out code
    - name: Checkout Code
      uses: actions/checkout@v3
 
    # Step 2: Set up Java and Maven
    - name: Set up Java and Maven
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: temurin
        cache: maven
 
    # Step 3: Build the Java application
    - name: Build Application with Maven
      run: mvn clean package
 
    # Step 4: Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
 
    # Build the Docker image
    - name: Build Docker image
      run: |
        IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/java-app
        IMAGE_TAG=${{ github.run_number }}
        docker build -t $IMAGE_NAME:$IMAGE_TAG .
        docker tag $IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME:latest
 
   # Push the Docker image with the version tag
    - name: Push Docker image with dynamic version
      run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/java-app
          IMAGE_TAG=${{ github.run_number }}
          docker push $IMAGE_NAME:$IMAGE_TAG
          docker push $IMAGE_NAME:latest

  deploy:
    name: Deploy to Minikube
    runs-on: ubuntu-latest
    needs: build
    steps:
    # Step 1: Check out code
    - name: Checkout Code
      uses: actions/checkout@v3

   # # Step 2: Log in to Docker Hub
   #  - name: Log in to Docker Hub
   #    uses: docker/login-action@v2
   #    with:
   #      username: ${{ secrets.DOCKER_USERNAME }}
   #      password: ${{ secrets.DOCKER_PASSWORD }}
      
    # Step 3: Set up kubectl
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'
 
    # Step 4: Set up Minikube
    - name: Set up Minikube
      uses: medyagh/setup-minikube@latest
      with:
        minikube-version: 'latest'
 
    # Step 5: Apply Kubernetes Manifest
    - name: Deploy using Kubernetes Manifest
      run: |
        pwd
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml

    - name: Describe the Pod
      run: |         
        POD_NAME=$(kubectl get pods -l app=java-app -o jsonpath='{.items[0].metadata.name}')
        kubectl describe pod $POD_NAME
    - name: Fetch Pod Logs
      run: |
        POD_NAME=$(kubectl get pods -l app=java-app -o jsonpath='{.items[0].metadata.name}')
        kubectl logs $POD_NAME
 
    - name: Check Kubernetes Events
      run: kubectl get events --sort-by='.metadata.creationTimestamp'
        
    # Step 4: Verify Pods and Service Status
    - name: Verify Application is Running
      run: |
        sleep 10
        kubectl get pods
        kubectl get svc
        kubectl port-forward svc/java-app 8080:8080 &
        sleep 10
        curl http://localhost:8080

